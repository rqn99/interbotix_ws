<launch>

  <arg name="robot_model"                       default=""/>
  <arg name="robot_name"                        default="locobot"/>
  <arg name="show_gripper_bar"                  default="true"/>
  <arg name="show_gripper_fingers"              default="true"/>
  <arg name="external_urdf_loc"                 default=""/>
  <arg name="use_rviz"                          default="false"/>
  <arg name="rviz_frame"                        default="$(arg robot_name)/base_footprint"/>
  <arg name="use_base"                          default="false"/>
  <arg name="use_dock"                          default="false"/>
  <arg name="use_lidar"                         default="false"/>
  <arg name="show_lidar"                        default="$(arg use_lidar)"/>
  <arg name="use_camera"                        default="false"/>
  <arg name="filters"                           default=""/>
  <arg name="align_depth"                       default="false"/>
  <arg name="color_fps"                         default="30"/>
  <arg name="color_width"                       default="640"/>
  <arg name="color_height"                      default="480"/>
  <arg name="depth_fps"                         default="30"/>
  <arg name="depth_width"                       default="640"/>
  <arg name="depth_height"                      default="480"/>
  <arg name="motor_configs"                     default="$(find interbotix_xslocobot_control)/config/$(arg robot_model).yaml"/>
  <arg name="load_configs"                      default="true"/>
  <arg name="use_sim"                           default="false"/>

  <arg name="xs_sdk_type" value="xs_sdk" unless="$(arg use_sim)"/>
  <arg name="xs_sdk_type" value="xs_sdk_sim" if="$(arg use_sim)"/>

  <arg if="$(eval robot_model == 'locobot_base')"     name="mode_type" value="base"/>
  <arg unless="$(eval robot_model == 'locobot_base')" name="mode_type" value="all"/>
  <arg name="mode_configs" default="$(find interbotix_xslocobot_control)/config/modes_$(arg mode_type).yaml"/>

  <param name="$(arg robot_name)/use_base"      value="$(arg use_base)"/>

  <include file="$(find interbotix_xslocobot_descriptions)/launch/xslocobot_description.launch">
    <arg name="robot_model"                       value="$(arg robot_model)"/>
    <arg name="robot_name"                        value="$(arg robot_name)"/>
    <arg name="show_lidar"                        value="$(arg show_lidar)"/>
    <arg name="show_gripper_bar"                  value="$(arg show_gripper_bar)"/>
    <arg name="show_gripper_fingers"              value="$(arg show_gripper_fingers)"/>
    <arg name="external_urdf_loc"                 value="$(arg external_urdf_loc)"/>
    <arg name="use_rviz"                          value="$(arg use_rviz)"/>
    <arg name="rviz_frame"                        value="$(arg rviz_frame)"/>
    <arg name="use_joint_pub"                     value="true"/>
    <arg name="rate"                              value="100"/>
    <arg name="source_list"                       value="[dynamixel/joint_states, mobile_base/joint_states]"/>
  </include>

  <node
    name="xs_sdk"
    pkg="interbotix_xs_sdk"
    type="$(arg xs_sdk_type)"
    output="screen"
    ns="$(arg robot_name)">
    <param name="motor_configs"                   value="$(arg motor_configs)"/>
    <param name="mode_configs"                    value="$(arg mode_configs)"/>
    <param name="load_configs"                    value="$(arg load_configs)"/>
  </node>

  <group if="$(arg use_base)" ns="$(arg robot_name)">
    <node
      name="mobile_base_nodelet_manager"
      pkg="nodelet"
      type="nodelet"
      args="manager"/>

    <node
      name="mobile_base"
      pkg="nodelet"
      type="nodelet"
      args="load kobuki_node/KobukiNodelet mobile_base_nodelet_manager">
      <rosparam command="load"                      file="$(find kobuki_node)/param/base.yaml"/>
      <param name="odom_frame"                      value="$(arg robot_name)/odom"/>
      <param name="base_frame"                      value="$(arg robot_name)/base_footprint"/>
      <param name="cmd_vel_timeout"                 value="2.0"/>
      <param name="acceleration_limiter"            value="true"/>
    </node>

    <node
      name="diagnostic_aggregator"
      pkg="diagnostic_aggregator"
      type="aggregator_node">
      <rosparam command="load"                      file="$(find kobuki_node)/param/diagnostics.yaml" />
    </node>

    <node if="$(arg use_dock)"
      pkg="nodelet" 
      type="nodelet" 
      name="dock_drive" 
      args="load kobuki_auto_docking/AutoDockingNodelet mobile_base_nodelet_manager">
      <rosparam command="load"                      file="$(find kobuki_auto_docking)/param/auto_docking.yaml" />
      <remap from="dock_drive/odom"                 to="mobile_base/odom" />
      <remap from="dock_drive/core"                 to="mobile_base/sensors/core" />
      <remap from="dock_drive/dock_ir"              to="mobile_base/sensors/dock_ir" />
      <remap from="dock_drive/motor_power"          to="mobile_base/commands/motor_power" />
      <remap from="dock_drive/velocity"             to="mobile_base/commands/velocity" />
    </node>
  </group>

  <node if="$(arg use_lidar)"
	  name="rplidarNode"
	  pkg="rplidar_ros"
	  type="rplidarNode"
	  output="screen"
    ns="$(arg robot_name)">
  	<param name="serial_port"       type="string" value="/dev/rplidar"/>
  	<param name="serial_baudrate"   type="int"    value="115200"/>
  	<param name="frame_id"          type="string" value="$(arg robot_name)/laser_frame_link"/>
  	<param name="inverted"          type="bool"   value="false"/>
  	<param name="angle_compensate"  type="bool"   value="true"/>
  </node>

  <include if="$(arg use_camera)" file="$(find realsense2_camera)/launch/rs_camera.launch" ns="$(arg robot_name)">
    <arg name="tf_prefix"		                      value="$(arg robot_name)/camera"/>
    <arg name="filters"                           value="$(arg filters)"/>
    <arg name="align_depth"                       value="$(arg align_depth)"/>
    <arg name="color_fps"                         value="$(arg color_fps)"/>
    <arg name="color_width"                       value="$(arg color_width)"/>
    <arg name="color_height"                      value="$(arg color_height)"/>
    <arg name="depth_fps"                         value="$(arg depth_fps)"/>
    <arg name="depth_width"                       value="$(arg depth_width)"/>
    <arg name="depth_height"                      value="$(arg depth_height)"/>
  </include>

</launch>
